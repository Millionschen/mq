package com.zuihuibao.web.dao;

import com.zuihuibao.web.model.UserInfo;
import com.zuihuibao.web.model.UserInfoExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.springframework.stereotype.Repository;

@Repository
public interface UserInfoMapper {
  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int countByExample(UserInfoExample example);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int deleteByExample(UserInfoExample example);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  @Delete({
      "delete from user_info",
      "where user_id = #{userId,jdbcType=BIGINT}"
  })
  int deleteByPrimaryKey(Long userId);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  @Insert({
      "insert into user_info (wechat_no, mobile, ",
      "coupon_balance, create_time, ",
      "update_time, nickname, ",
      "sex, city, province, ",
      "unionid, integral, ",
      "channel_id, recommender_id, ",
      "recommend_time, recommend_mobile, ",
      "realname, isagent, ",
      "bank_card, subscribe, ",
      "thirdparty_account, rongyun_token, ",
      "device_token, city_area, ",
      "auth_realname)",
      "values (#{wechatNo,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, ",
      "#{couponBalance,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, ",
      "#{updateTime,jdbcType=TIMESTAMP}, #{nickname,jdbcType=VARCHAR}, ",
      "#{sex,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, ",
      "#{unionid,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER}, ",
      "#{channelId,jdbcType=VARCHAR}, #{recommenderId,jdbcType=BIGINT}, ",
      "#{recommendTime,jdbcType=TIMESTAMP}, #{recommendMobile,jdbcType=VARCHAR}, ",
      "#{realname,jdbcType=VARCHAR}, #{isagent,jdbcType=INTEGER}, ",
      "#{bankCard,jdbcType=VARCHAR}, #{subscribe,jdbcType=INTEGER}, ",
      "#{thirdpartyAccount,jdbcType=VARCHAR}, #{rongyunToken,jdbcType=VARCHAR}, ",
      "#{deviceToken,jdbcType=CHAR}, #{cityArea,jdbcType=VARCHAR}, ",
      "#{authRealname,jdbcType=VARCHAR})"
  })
  @SelectKey(statement = "SELECT LAST_INSERT_ID()", keyProperty = "userId", before = false, resultType = Long.class)
  int insert(UserInfo record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int insertSelective(UserInfo record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  List<UserInfo> selectByExample(UserInfoExample example);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  @Select({
      "select",
      "user_id, wechat_no, mobile, coupon_balance, create_time, update_time, nickname, ",
      "sex, city, province, unionid, integral, channel_id, recommender_id, recommend_time, ",
      "recommend_mobile, realname, isagent, bank_card, subscribe, thirdparty_account, ",
      "rongyun_token, device_token, city_area, auth_realname",
      "from user_info",
      "where user_id = #{userId,jdbcType=BIGINT}"
  })
  @ResultMap("BaseResultMap")
  UserInfo selectByPrimaryKey(Long userId);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int updateByExampleSelective(@Param("record") UserInfo record,
      @Param("example") UserInfoExample example);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int updateByExample(@Param("record") UserInfo record, @Param("example") UserInfoExample example);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  int updateByPrimaryKeySelective(UserInfo record);

  /**
   * This method was generated by MyBatis Generator.
   * This method corresponds to the database table user_info
   *
   * @mbggenerated
   */
  @Update({
      "update user_info",
      "set wechat_no = #{wechatNo,jdbcType=VARCHAR},",
      "mobile = #{mobile,jdbcType=VARCHAR},",
      "coupon_balance = #{couponBalance,jdbcType=DOUBLE},",
      "create_time = #{createTime,jdbcType=TIMESTAMP},",
      "update_time = #{updateTime,jdbcType=TIMESTAMP},",
      "nickname = #{nickname,jdbcType=VARCHAR},",
      "sex = #{sex,jdbcType=INTEGER},",
      "city = #{city,jdbcType=VARCHAR},",
      "province = #{province,jdbcType=VARCHAR},",
      "unionid = #{unionid,jdbcType=VARCHAR},",
      "integral = #{integral,jdbcType=INTEGER},",
      "channel_id = #{channelId,jdbcType=VARCHAR},",
      "recommender_id = #{recommenderId,jdbcType=BIGINT},",
      "recommend_time = #{recommendTime,jdbcType=TIMESTAMP},",
      "recommend_mobile = #{recommendMobile,jdbcType=VARCHAR},",
      "realname = #{realname,jdbcType=VARCHAR},",
      "isagent = #{isagent,jdbcType=INTEGER},",
      "bank_card = #{bankCard,jdbcType=VARCHAR},",
      "subscribe = #{subscribe,jdbcType=INTEGER},",
      "thirdparty_account = #{thirdpartyAccount,jdbcType=VARCHAR},",
      "rongyun_token = #{rongyunToken,jdbcType=VARCHAR},",
      "device_token = #{deviceToken,jdbcType=CHAR},",
      "city_area = #{cityArea,jdbcType=VARCHAR},",
      "auth_realname = #{authRealname,jdbcType=VARCHAR}",
      "where user_id = #{userId,jdbcType=BIGINT}"
  })
  int updateByPrimaryKey(UserInfo record);
}